rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles
    function isSignedIn() {
      return request.auth != null;
    }

    function isAdmin() {
      return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    function isTeacher() {
        return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }
    
    function isStudent() {
        return isSignedIn() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'student';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // An admin can do anything. A user can create their own user document, and read any user document.
      allow read: if isSignedIn();
      allow create: if request.auth.uid == userId;
      allow update, delete: if isAdmin();
    }

    // Rules for all collections under a specific college
    match /colleges/{collegeId}/{document=**} {
        // Admins have full read/write access to everything.
        // Any authenticated user (student, teacher) can read documents.
        allow read: if isSignedIn();
        allow write: if isAdmin();
    }
    
    // Default deny all other reads/writes
    match /{path=**}/documents/{document} {
        allow read, write: if false;
    }
  }
}
