
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper functions to check user roles
    function isAdmin() {
      // Check if the user is authenticated and their role in the 'users' collection is 'admin'.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    function isTeacher() {
      // Check if the user is authenticated and their role is 'teacher'.
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'teacher';
    }

    // Rules for the 'users' collection where roles are stored
    match /users/{userId} {
      // Allow users to read their own user document.
      // Allow admins to read any user document.
      allow read: if request.auth.uid == userId || isAdmin();
      
      // Allow users to create their own user document upon signup.
      // Allow admins to write to any user document (e.g., to assign roles).
      allow write: if request.auth.uid == userId || isAdmin();
    }

    // Rules for all documents within a specific college
    match /colleges/{collegeId}/{document=**} {
      // Allow any authenticated user to read data (e.g., students reading notices, teachers reading their assignments).
      allow read: if request.auth != null;
      
      // ONLY allow users with the 'admin' role to write (create, update, delete) data.
      // This is the master rule for all admin-managed collections like degrees, teachers, employees, etc.
      allow write: if isAdmin();
    }
  }
}

    